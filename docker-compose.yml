x-crater-common-env: &crater-common-env
  APP_NAME: ${APP_NAME:-Crater}
  APP_ENV: ${APP_ENV:-production}
  APP_KEY: ${APP_KEY:-base64:kZN2g9Tg6+mi1YNc+sSiZAO2ljlQBfLC3ByWH0YarWk=}
  APP_DEBUG: ${APP_DEBUG:-false}
  APP_URL: ${APP_URL:-http://localhost}
  DB_CONNECTION: ${DB_CONNECTION:-mysql}
  DB_HOST: ${DB_HOST:-db}
  DB_PORT: ${DB_PORT:-3306}
  DB_DATABASE: ${DB_DATABASE}
  DB_USERNAME: ${DB_USERNAME}
  DB_PASSWORD: ${DB_PASSWORD}
  SESSION_DRIVER: ${SESSION_DRIVER:-file}
  QUEUE_CONNECTION: ${QUEUE_CONNECTION:-sync}
  MAIL_MAILER: ${MAIL_MAILER:-log}

x-db-common-env: &db-common-env
  MYSQL_DATABASE: ${DB_DATABASE}
  MYSQL_USER: ${DB_USERNAME}
  MYSQL_PASSWORD: ${DB_PASSWORD}
  MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

services:
  app:
    build:
      args:
        user: ${DOCKER_USER:-crater-user}
        uid: ${DOCKER_UID:-1000}
      context: ./
      dockerfile: Dockerfile
    image: ${DOCKER_IMAGE:-crater-php}
    restart: unless-stopped
    environment:
      <<: *crater-common-env
      DB_SEED: ${DB_SEED:-false}
    volumes:
      - ./:/var/www
      - ./docker-compose/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:rw,delegated
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crater

  db:
    image: ${DB_IMAGE:-mariadb:10.6}
    restart: unless-stopped
    environment:
      <<: *db-common-env
    volumes:
      - ${DB_VOLUME:-db_data}:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: ${HEALTHCHECK_INTERVAL:-5s}
      timeout: ${HEALTHCHECK_TIMEOUT:-5s}
      retries: ${HEALTHCHECK_RETRIES:-10}
      start_period: ${HEALTHCHECK_START_PERIOD:-10s}
    networks:
      - crater

  caddy:
    image: ${CADDY_IMAGE:-caddy:2-alpine}
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-8080}:8080"
    volumes:
      - ./:/var/www
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app
    networks:
      - crater

  cron:
    build:
      context: ./
      dockerfile: ./docker-compose/cron.dockerfile
    restart: unless-stopped
    environment:
      <<: *crater-common-env
    volumes:
      - ./:/var/www
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crater

volumes:
  db_data:
    driver: ${VOLUME_DRIVER:-local}
  caddy_data:
    driver: ${VOLUME_DRIVER:-local}
  caddy_config:
    driver: ${VOLUME_DRIVER:-local}

networks:
  crater:
    driver: ${NETWORK_DRIVER:-bridge}
