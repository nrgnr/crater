version: '3'

services:
  app:
    build:
      args:
        user: ${DOCKER_USER:-crater-user}
        uid: ${DOCKER_UID:-1000}
      context: ./
      dockerfile: Dockerfile
    image: crater-php
    restart: unless-stopped
    environment:
      DB_CONNECTION: mysql
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-crater}
      DB_USERNAME: ${DB_USERNAME:-crater}
      DB_PASSWORD: ${DB_PASSWORD:-crater}
      DB_SEED: ${DB_SEED:-false}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-crater}
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_KEY: ${APP_KEY:-base64:kZN2g9Tg6+mi1YNc+sSiZAO2ljlQBfLC3ByWH0YarWk=}
      APP_URL: ${APP_URL:-http://localhost:8080}
    volumes:
      - ./:/var/www
      - ./docker-compose/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:rw,delegated
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crater

  db:
    image: mariadb:10.6
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-crater}
      MYSQL_USER: ${DB_USERNAME:-crater}
      MYSQL_PASSWORD: ${DB_PASSWORD:-crater}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-crater}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - crater

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-8080}:8080"
    volumes:
      - ./:/var/www
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app
    networks:
      - crater

  cron:
    build:
      context: ./
      dockerfile: ./docker-compose/cron.dockerfile
    restart: unless-stopped
    environment:
      DB_CONNECTION: mysql
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE:-crater}
      DB_USERNAME: ${DB_USERNAME:-crater}
      DB_PASSWORD: ${DB_PASSWORD:-crater}
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_KEY: ${APP_KEY:-base64:kZN2g9Tg6+mi1YNc+sSiZAO2ljlQBfLC3ByWH0YarWk=}
      APP_URL: ${APP_URL:-http://localhost:8080}
    volumes:
      - ./:/var/www
    depends_on:
      db:
        condition: service_healthy
    networks:
      - crater

volumes:
  db_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local

networks:
  crater:
    driver: bridge
